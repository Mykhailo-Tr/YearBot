import telebot
import json
from telebot.types import ReplyKeyboardMarkup, KeyboardButton
import os

# –¢–æ–∫–µ–Ω –±–æ—Ç–∞
# API_TOKEN = os.getenv("TELEGRAM_BOT_TOKEN")
API_TOKEN = "7912946609:AAFFID-p-KTwLB2MzxJWbuQ_u9UbZU3GCAA"
bot = telebot.TeleBot(API_TOKEN)

# –ó–∞–≤–∞–Ω—Ç–∞–∂–µ–Ω–Ω—è —ñ—Å—Ç–æ—Ä–∏—á–Ω–∏—Ö –¥–∞–Ω–∏—Ö
def load_data():
    with open("history_data.json", "r", encoding="utf-8") as file:
        return json.load(file)


data = load_data()

# –ü—Ä–∏–≤—ñ—Ç–∞–Ω–Ω—è –ø—Ä–∏ —Å—Ç–∞—Ä—Ç—ñ
@bot.message_handler(commands=['start'])
def send_welcome(message):
    bot.send_message(message.chat.id, "üëã –í—ñ—Ç–∞—é! –Ø –±–æ—Ç, —â–æ –¥–æ–ø–æ–º–æ–∂–µ –≤–∞–º –¥—ñ–∑–Ω–∞—Ç–∏—Å—è —ñ—Å—Ç–æ—Ä–∏—á–Ω—ñ –ø–æ–¥—ñ—ó üìú —Ç–∞ –≤–∏–¥–∞—Ç–Ω–∏—Ö –æ—Å–æ–±–∏—Å—Ç–æ—Å—Ç–µ–π üèõÔ∏è. –í–∏ –º–æ–∂–µ—Ç–µ –≤–∏–∫–æ—Ä–∏—Å—Ç–æ–≤—É–≤–∞—Ç–∏ –∫–æ–º–∞–Ω–¥–∏ /years —Ç–∞ /personalities.")

# –û—Ç—Ä–∏–º–∞—Ç–∏ –≤—Å—ñ —Ä–æ–∫–∏ –∑ —ñ—Å—Ç–æ—Ä–∏—á–Ω–∏–º–∏ –ø–æ–¥—ñ—è–º–∏
@bot.message_handler(commands=['years'])
def list_years(message):
    keyboard = ReplyKeyboardMarkup(resize_keyboard=True)
    for year in data["years"].keys():
        keyboard.add(KeyboardButton(year))
    bot.send_message(message.chat.id, "üìÖ –û–±–µ—Ä—ñ—Ç—å —Ä—ñ–∫ –¥–ª—è –ø–µ—Ä–µ–≥–ª—è–¥—É –ø–æ–¥—ñ–π:", reply_markup=keyboard)

# –û—Ç—Ä–∏–º–∞—Ç–∏ –≤—Å—ñ –ø–µ—Ä—Å–æ–Ω
@bot.message_handler(commands=['personalities'])
def list_personalities(message):
    keyboard = ReplyKeyboardMarkup(resize_keyboard=True)
    for name in data["personalities"].keys():
        keyboard.add(KeyboardButton(name))
    bot.send_message(message.chat.id, "üîç –û–±–µ—Ä—ñ—Ç—å —ñ—Å—Ç–æ—Ä–∏—á–Ω—É –æ—Å–æ–±—É:", reply_markup=keyboard)

# –û—Ç—Ä–∏–º–∞—Ç–∏ –ø–æ–¥—ñ—ó –∑–∞ —Ä—ñ–∫
@bot.message_handler(func=lambda message: message.text in data["years"])
def send_year_info(message):
    year = message.text
    events = "\n".join(data["years"][year])
    if events:
        bot.send_message(message.chat.id, f"üìñ –Ü—Å—Ç–æ—Ä–∏—á–Ω—ñ –ø–æ–¥—ñ—ó {year} —Ä–æ–∫—É:\n{events}")
    else:
        bot.send_message(message.chat.id, "‚ùå –ù–∞ –∂–∞–ª—å, –Ω–µ–º–∞—î —ñ–Ω—Ñ–æ—Ä–º–∞—Ü—ñ—ó –ø—Ä–æ —Ü–µ–π —Ä—ñ–∫.")

# –û—Ç—Ä–∏–º–∞—Ç–∏ —ñ–Ω—Ñ–æ—Ä–º–∞—Ü—ñ—é –ø—Ä–æ —ñ—Å—Ç–æ—Ä–∏—á–Ω—É –æ—Å–æ–±—É –±–µ–∑ –≤—Ä–∞—Ö—É–≤–∞–Ω–Ω—è —Ä–µ–≥—ñ—Å—Ç—Ä—É
@bot.message_handler(func=lambda message: message.text.lower() in map(str.lower, data["personalities"]))
def send_personality_info(message):
    name = next(key for key in data["personalities"].keys() if key.lower() == message.text.lower())
    person = data["personalities"][name]
    bot.send_photo(message.chat.id, person["photo"], caption=f"üßë‚Äçüéì {name}\nüìú {person['info']}")

# –Ø–∫—â–æ —ñ–Ω—Ñ–æ—Ä–º–∞—Ü—ñ—è –≤—ñ–¥—Å—É—Ç–Ω—è
@bot.message_handler(func=lambda message: True)
def unknown_message(message):
    bot.send_message(message.chat.id, "‚ùå –í–∏–±–∞—á—Ç–µ, —è –Ω–µ –º–∞—é —ñ–Ω—Ñ–æ—Ä–º–∞—Ü—ñ—ó –ø—Ä–æ —Ü–µ. –°–ø—Ä–æ–±—É–π—Ç–µ —â–µ —Ä–∞–∑! üòä")

# –ó–∞–ø—É—Å–∫ –±–æ—Ç–∞
bot.polling(none_stop=True)